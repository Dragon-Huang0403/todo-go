name: Build and Scan Container Image

on:
  push:
    branches:
      - main
      - develop
      - ci/**
    tags:
      - "v*"

  pull_request:
    paths:
      - .github/**
      - cmd/**
      - internal/**
      - pkg/**
      - go.mod
      - go.sum
  workflow_dispatch:

jobs:
  build-image:
    name: Build Container Image
    permissions:
      id-token: write
      contents: read
    outputs:
      todo-version: ${{ steps.metadata-todo.outputs.version }}
      todo-image-tags: ${{ steps.metadata-todo.outputs.tags }}
    strategy:
      fail-fast: false
      matrix:
        release:
          - true
          - false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup docker-buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Parse component tags
        id: tag
        uses: actions/github-script@v7
        with:
          script: |
            const match = /^refs\/tags\/(.*?)-(v.*?)$/g.exec(context.ref);
            if (match !== null) {
              const [, component, version] = match;
              core.setOutput(component, version.replace(/\//g, "-"));
            }

      - name: Container metadata - Todo Go
        id: metadata-todo
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.CONTAINER_REGISTRY }}/todo-go
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,enable=${{ steps.tag.outputs.todo != '' }},value=${{ steps.tag.outputs.todo }},pattern={{version}}
            type=semver,enable=${{ steps.tag.outputs.todo != '' }},value=${{ steps.tag.outputs.todo }},pattern={{major}}.{{minor}}
            type=edge
            type=raw,enable=${{ steps.tag.outputs.todo == '' }},value=build-{{date 'YYYY.MM.DD'}}-${{ github.run_id }}-{{sha}}
          flavor: |
            latest=auto
            suffix=${{ !matrix.release && '-debug' || ''}}
          bake-target: todo

      - name: Build container images
        id: bake
        uses: docker/bake-action@v5
        env:
          COMMIT: ${{ github.sha }}
          RELEASE: ${{ matrix.release }}
        with:
          pull: true
          push: true
          provenance: mode=max
          sbom: true
          set: |
            ${{ inputs.platforms && format('base.platform={0}', inputs.platforms) || '' }}
            todo.args.VERSION=${{ steps.metadata-core.outputs.version }}
          files: |
            cwd://./docker-bake.hcl
            ${{ steps.metadata-todo.outputs.bake-file-annotations }}
            ${{ steps.metadata-todo.outputs.bake-file-labels }}
            ${{ steps.metadata-todo.outputs.bake-file-tags }}

      - name: Print image tags
        run: |
          {
            echo '# Image Tags :rocket:'
            echo '```'
            echo '${{ steps.metadata-todo.outputs.tags }}'
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"

  scan-image:
    name: Scan Container Image
    permissions:
      id-token: write
      contents: read
      packages: write
    runs-on: ubuntu-latest
    needs:
      - build-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ needs.build-image.outputs.todo-image-tags }}
          summary: true
